为了成为一名合格的android开发者,今天起开始坚持记录学习笔记.

android框架:
1.OkHttp:
	基本使用-http://blog.csdn.net/iispring/article/details/51661195
	官方文档-https://github.com/square/okhttp/wiki/Calls
	基本原理分析-http://blog.csdn.net/evan_man/article/details/51173810
			   -http://blog.csdn.net/evan_man/article/details/51180863
			   -http://blog.csdn.net/evan_man/article/details/51182087
			   -http://blog.csdn.net/evan_man/article/details/51204469
2.Xutils:
	基本使用-http://blog.csdn.net/true100/article/details/51734217
	官方示例-见github


疑难小问题:
1.retrofit使用post把数据传给服务端时出现中文乱码的问题
解决方案-添加头部如下:
@Headers("Content-Type:application/x-www-form-urlencoded; charset=utf-8")

2.在浏览其查看android内部数据：
debugCompile 'com.amitshekhar.android:debug-db:1.0.0'

3.在使用xutils操作数据库的时候，bean必须加上空构造函数，否则不能创建数据库。

4.在使用xutils绑定view的时候，方法名必须是private的，否则绑定不了view。

5.实现聊天界面的时候，使用recyclerview显示消息列表，当打开输入法的时候，recyclerview并不能滑动到底部。
解决方案：mLayoutManager.setStackFromEnd(true);

6.android api>=24的手机拍照问题解决方案：
private void takePicture() {
        mCurrentPicName = System.currentTimeMillis() + ".png";
        File currentPic = new File(mLogDirectory, mCurrentPicName);
        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
        Uri imageUri;
        if (Build.VERSION.SDK_INT >= 24) {
            imageUri = FileProvider.getUriForFile(this,
                    "com.jicq.provider", currentPic);
            intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
        } else {
            imageUri = Uri.fromFile(currentPic);
        }
        intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);
        startActivityForResult(intent, REQUEST_CODE_CAPTURE);
}
相应的打开图片浏览器：
/***
     * 打开系统自带的图片浏览器，进行图片浏览操作。
     * @param picPath 图片的绝对路径。
     */
    private void openImageBrowser(String picPath) {
        if (Build.VERSION.SDK_INT < 24) {
            Uri imageUri;
            if (picPath.startsWith("content://")) {
                imageUri = Uri.parse(picPath);
            } else {
                imageUri = Uri.parse("file://" + picPath);
            }
            Intent intent = new Intent(Intent.ACTION_VIEW);
            intent.setDataAndType(imageUri, "image/*");
            startActivity(intent);
        } else {
            Intent intent = new Intent(Intent.ACTION_VIEW);
            Uri uri = FileProvider.getUriForFile(this,
                    "com.jicq.provider", new File(picPath));
            intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
            intent.setDataAndType(uri, "image/*");
            startActivity(intent);
        }
    }

7.将相册里的Uri转为String格式的路径
/**
 * 将相册里的Uri转为String格式的路径
 *
 * @param uri 资源定位地址
 * @return String格式路径
 */
private String getPathFromUri(Uri uri) {
    String path = "";
    String[] projection = {MediaStore.Images.Media.DATA};
    ContentResolver resolver = getContentResolver();
    Cursor cursor = resolver.query(uri, projection, null,
            null, null);
    if (cursor != null) {
        cursor.moveToFirst();
        path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));
        cursor.close();
    }
    return path;
}



