
android框架:
1.OkHttp:
	基本使用-http://blog.csdn.net/iispring/article/details/51661195
	官方文档-https://github.com/square/okhttp/wiki/Calls
	基本原理分析-http://blog.csdn.net/evan_man/article/details/51173810
			   -http://blog.csdn.net/evan_man/article/details/51180863
			   -http://blog.csdn.net/evan_man/article/details/51182087
			   -http://blog.csdn.net/evan_man/article/details/51204469
2.Xutils:
	基本使用-http://blog.csdn.net/true100/article/details/51734217
	官方示例-见github


疑难小问题:
1.retrofit使用post把数据传给服务端时出现中文乱码的问题
解决方案-添加头部如下:
@Headers("Content-Type:application/x-www-form-urlencoded; charset=utf-8")

2.在浏览其查看android内部数据：
debugCompile 'com.amitshekhar.android:debug-db:1.0.0'

3.在使用xutils操作数据库的时候，bean必须加上空构造函数，否则不能创建数据库。

4.在使用xutils绑定view的时候，方法名必须是private的，否则绑定不了view。

5.实现聊天界面的时候，使用recyclerview显示消息列表，当打开输入法的时候，recyclerview并不能滑动到底部。
解决方案：mLayoutManager.setStackFromEnd(true);

6.android api>=24的手机拍照问题解决方案：
a.mainifest配置如下：
<!--当TARGET_SDK >= 24的时候需要使用file provider访问文件-->
<provider
            android:name=".app.MyFileProvider"
            android:authorities="com.jicq.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths" />
        </provider>
b.@xml/provider_paths文件内容如下：
<?xml version="1.0" encoding="utf-8"?>
<paths xmlns:android="http://schemas.android.com/apk/res/android">
    <external-path
        name="external_files"
        path="." />
</paths>
c. .app.MyFileProvider文件内容如下：
import android.support.v4.content.FileProvider;
public class MyFileProvider extends FileProvider {

}
d.代码书写：
private void takePicture() {
        mCurrentPicName = System.currentTimeMillis() + ".png";
        File currentPic = new File(mLogDirectory, mCurrentPicName);
        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
        Uri imageUri;
        if (Build.VERSION.SDK_INT >= 24) {
            imageUri = FileProvider.getUriForFile(this,
                    "com.jicq.provider", currentPic);
            intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
        } else {
            imageUri = Uri.fromFile(currentPic);
        }
        intent.putExtra(MediaStore.EXTRA_OUTPUT, imageUri);
        startActivityForResult(intent, REQUEST_CODE_CAPTURE);
}
相应的打开图片浏览器：
/***
     * 打开系统自带的图片浏览器，进行图片浏览操作。
     * @param picPath 图片的绝对路径。
     */
    private void openImageBrowser(String picPath) {
        if (Build.VERSION.SDK_INT < 24) {
            Uri imageUri;
            if (picPath.startsWith("content://")) {
                imageUri = Uri.parse(picPath);
            } else {
                imageUri = Uri.parse("file://" + picPath);
            }
            Intent intent = new Intent(Intent.ACTION_VIEW);
            intent.setDataAndType(imageUri, "image/*");
            startActivity(intent);
        } else {
            Intent intent = new Intent(Intent.ACTION_VIEW);
            Uri uri = FileProvider.getUriForFile(this,
                    "com.jicq.provider", new File(picPath));
            intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
            intent.setDataAndType(uri, "image/*");
            startActivity(intent);
        }
    }

7.将相册里的Uri转为String格式的路径
/**
 * 将相册里的Uri转为String格式的路径
 *
 * @param uri 资源定位地址
 * @return String格式路径
 */
private String getPathFromUri(Uri uri) {
    String path = "";
    String[] projection = {MediaStore.Images.Media.DATA};
    ContentResolver resolver = getContentResolver();
    Cursor cursor = resolver.query(uri, projection, null,
            null, null);
    if (cursor != null) {
        cursor.moveToFirst();
        path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));
        cursor.close();
    }
    return path;
}

8.裁切图片：
/***
 * 构建裁切图片的intent。
 * @param imageUri 要裁切的图片的uri
 * @return
 */

private Intent buildCropIntent(Uri imageUri) {
    File headerFile =
            new File(Environment.getExternalStorageDirectory(), "fh_header.jpg");
    mHeaderPath = headerFile.getAbsolutePath();
    Intent intent = new Intent("com.android.camera.action.CROP");
    intent.setDataAndType(imageUri, "image/*");
    intent.putExtra("crop", "true");
    // 设置x,y的比例，截图方框就按照这个比例来截 若设置为0,0，或者不设置 则自由比例截图
    intent.putExtra("aspectX", 1);
    intent.putExtra("aspectY", 1);
    // 裁剪区的宽和高 其实就是裁剪后的显示区域 若裁剪的比例不是显示的比例，
    // 则自动压缩图片填满显示区域。若设置为0,0 就不显示。若不设置，则按原始大小显示
    intent.putExtra("outputX", 600);
    intent.putExtra("outputY", 600);
    // 不知道有啥用。。可能会保存一个比例值 需要相关文档啊
    intent.putExtra("scale", true);
    // true的话直接返回bitmap，可能会很占内存 不建议
    intent.putExtra("return-data", false);
    // 上面设为false的时候将MediaStore.EXTRA_OUTPUT即"output"关联一个Uri
    intent.putExtra("output", Uri.fromFile(headerFile));
    // 看参数即可知道是输出格式
    intent.putExtra("outputFormat", Bitmap.CompressFormat.JPEG.toString());
    // 面部识别 这里用不上
    intent.putExtra("noFaceDetection", false);
    return intent;
}

9.使用xutils绑定图片的时候，如果设置图片是圆形的，则部分机型会出现黑色背景，解决方案：
在ImageDecoder.java 589行 将thumbBitmap.compress(supportWebP ? Bitmap.CompressFormat.WEBP : Bitmap.CompressFormat.PNG, 80, out); 更改为thumbBitmap.compress( Bitmap.CompressFormat.PNG, 80, out); 即可

/***
     * 获取状态栏高度。
     * @return
     */
    private int getStatusBarHeight() {
        int height = 0;
        //获取status_bar_height资源的ID
        int resourceId = getResources().getIdentifier("status_bar_height", "dimen", "android");
        if (resourceId > 0) {
            //根据资源ID获取响应的尺寸值
            height = getResources().getDimensionPixelSize(resourceId);
        }
        return height;
    }

    /***
     * 获取actionbar的高度。
     * @param context
     * @return
     */
    private int getActionbarHeight(Context context) {
        int height = 0;
        // Calculate ActionBar height
        TypedValue tv = new TypedValue();
        if (context.getTheme().resolveAttribute(android.support.v7.appcompat.R.attr.actionBarSize, tv, true)) {
            height = TypedValue.complexToDimensionPixelSize(tv.data, getResources().getDisplayMetrics());
        }
        return height;
}

1、	viepager下面如果放置fragment的话，在new fragment之前要先用fragmentmanager.findFragmentByxx找一下，否则会出现null。
2、	在fragment使用getActivity获取的值可能为null，解决办法是在onAttachActivity方法里对activity重新赋值。
3、	解绑广播的时候，要首先判断下广播是否为null
4、	要慎用全局广播，尽量使用本地广播。
5、重新导入依赖gradlew build --refresh-dependencies
6、使输入法右下角显示“搜素”、“下一步”等：
	单行显示的话：设置singleLine为true，再设置edittext的imeOptions。
	多行显示的话：
		et.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_FLAG_CAP_SENTENCES);
        et.setHorizontallyScrolling(false);
        et.setMaxLines(Integer.MAX_VALUE);
        et.setImeOptions(EditorInfo.IME_ACTION_NEXT);
	 设置监听：
	  et.setOnEditorActionListener((v, actionId, event) -> {
            if (actionId == EditorInfo.IME_ACTION_NEXT) {
                // TODO: 2018/4/4  
                return true;
            }
            return false;

        });
7.自定义tablayout+viewpager的坑：
			/***
         * NOTE：
         * 1.每个 Tab 的 customView 必须在 headBar.setupWithViewPager 之后调用，否则不起作用。
         * 2.setupWithViewPager调用之后，先remove掉自动生成的tab，即：headBar.removeAllTabs()
         *
         * 原因:调用setupWithViewPager之后，TabLayout会执行这么一段代码：
         *
         * void populateFromPagerAdapter() {
         *      removeAllTabs();
         *
         *      if (mPagerAdapter != null) {
         *          final int adapterCount = mPagerAdapter.getCount();
         *          for (int i = 0; i < adapterCount; i++) {
         *                  addTab(newTab().setText(mPagerAdapter.getPageTitle(i)), false);
         *          }
         *
         *\         // Make sure we reflect the currently set ViewPager item
         *          if (mViewPager != null && adapterCount > 0) {
         *              final int curItem = mViewPager.getCurrentItem();
         *              if (curItem != getSelectedTabPosition() && curItem < getTabCount()) {
         *                  selectTab(getTabAt(curItem));
         *              }
         *          }
         *      }
         *  }
         */
        mPager = findViewById(R.id.home_view_pager);
        TabLayout headBar = findViewById(R.id.home_table_ly);
        mPager.setAdapter(new HomeViewPagerAdapter(getSupportFragmentManager()));
        headBar.setupWithViewPager(mPager);
        headBar.removeAllTabs();

        mHomeTab = headBar.newTab();
        headBar.addTab(mHomeTab, 0);
        mLiveTab = headBar.newTab();
        headBar.addTab(mLiveTab, 1);
        mNotificationTab = headBar.newTab();
        headBar.addTab(mNotificationTab, 2);
        mMessageTab = headBar.newTab();
        headBar.addTab(mMessageTab, 3);

        mHomeTab.setCustomView(R.layout.tab_custom_layout);
        mHomeTab.getCustomView().findViewById(R.id.tab_iv)
                .setBackground(getResources().getDrawable(R.drawable.tab_home_ico));
        mHomeTab.getCustomView().findViewById(R.id.tab_iv).setSelected(true);

        mLiveTab.setCustomView(R.layout.tab_custom_layout);
        mLiveTab.getCustomView().findViewById(R.id.tab_iv)
                .setBackground(getResources().getDrawable(R.drawable.tab_live_ico));
        mLiveTab.getCustomView().findViewById(R.id.tab_iv).setSelected(false);

        mNotificationTab.setCustomView(R.layout.tab_custom_layout);
        mNotificationTab.getCustomView().findViewById(R.id.tab_iv)
                .setBackground(getResources().getDrawable(R.drawable.tab_notification_ico));
        mNotificationTab.getCustomView().findViewById(R.id.tab_iv).setSelected(false);

        mMessageTab.setCustomView(R.layout.tab_custom_layout);
        mMessageTab.getCustomView().findViewById(R.id.tab_iv)
                .setBackground(getResources().getDrawable(R.drawable.tab_message_ico));
        mMessageTab.getCustomView().findViewById(R.id.tab_iv).setSelected(false);
			...对每一个tab进行setCustomView操作

8、tablelayout的一个tabrow里放置的view有背景但是显示不全或者tabrow里是一个textview，但是ecllipse=end不起作用，解决办法：
	android:shrinkColumns="1"
	android:stretchColumns="1"
9、动态的往radiogroup中添加radiobutton，代码设置margin不起作用：
将LinearLayout.LayoutParams改成RadioGroup.LayoutParams，如下
RadioGroup.LayoutParams params = new RadioGroup.LayoutParams(width, width);
params.rightMargin = margin;
10、surfaceview黑屏
构造函数中加上：
this.setZOrderOnTop(true);
this.getHolder().setFormat(PixelFormat.TRANSLUCENT);

9、设置activity全屏并隐藏下方的返回键：
在style中设置
   <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="windowNoTitle">true</item>
        <item name="android:windowFullscreen">true</item>
    </style>

在activity中设置：
 private void setFullScreenUI() {
        if (Build.VERSION.SDK_INT < 19) {
            View v = this.getWindow().getDecorView();
            v.setSystemUiVisibility(View.GONE);
        } else if (Build.VERSION.SDK_INT >= 19) {
            View v = this.getWindow().getDecorView();
            int options = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                    | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
            v.setSystemUiVisibility(options);
        }
    }
20:解决surfaceview抗锯齿无效：
//解决抗锯齿无效的
mCanvas.drawColor(Color.TRANSPARENT, android.graphics.PorterDuff.Mode.CLEAR);
每次绘制前调用下此方法。surfaceview有自己的buffer，这行代码相当于清除buffer。
21:android 8.0下载新版本无法安装：
缺少权限：<uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" />

21、屏幕适配新方案
private static float sNonCompatDensity = 0;
    private static float sNonCompatScaledDensity = 0;

    /***
     * 调用示例：
     * @Override
     * protected void onCreate(Bundle savedInstanceState) {
     *      setCustomDensity();
     *      super.onCreate(savedInstanceState);
     *      ...
     * }
     * {@see https://mp.weixin.qq.com/s/d9QCoBP6kV9VSWvVldVVwA}
     */
    private void setCustomDensity() {
        final DisplayMetrics appDisplayMetrics = getApplication().getResources().getDisplayMetrics();
        final DisplayMetrics activityDisplayMetrics = getResources().getDisplayMetrics();

        if (sNonCompatDensity == 0) {
            sNonCompatDensity = appDisplayMetrics.density;
            sNonCompatScaledDensity = appDisplayMetrics.scaledDensity;
            getApplication().registerComponentCallbacks(new ComponentCallbacks() {
                @Override
                public void onConfigurationChanged(Configuration newConfig) {
                    if (newConfig != null && newConfig.fontScale > 0) {
                        sNonCompatScaledDensity = getApplication().getResources()
                                .getDisplayMetrics().scaledDensity;
                    }
                }

                @Override
                public void onLowMemory() {
                    //nothing here.
                }
            });
        }

        final float targetDensity = appDisplayMetrics.widthPixels / 960 / 2; //960为设计图的宽度（单位是px）--xhdpi下，1dp = 2px,所以要除以 2.
        final int targetDensityDpi = (int) (targetDensity * 160);
        final float targetScaledDensity =
                targetDensity * (sNonCompatScaledDensity / sNonCompatDensity);

        appDisplayMetrics.density = targetDensity;
        appDisplayMetrics.densityDpi = targetDensityDpi;
        appDisplayMetrics.scaledDensity = targetScaledDensity;

        activityDisplayMetrics.density = targetDensity;
        activityDisplayMetrics.densityDpi = targetDensityDpi;
        activityDisplayMetrics.scaledDensity = targetScaledDensity;
    }

	
23、recyclerview 只设置底部或者只设置顶部的fadingedge，直接继承recyclerview，重写下面的方法即可
    @Override
    protected float getTopFadingEdgeStrength() {
        return 0f;
    }

24、动态改变checkbox选中、未选中状态下的文字颜色：
<CheckBox
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="@string/app_name"
        android:textColor="@drawable/text_color" />

<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:color="@android:color/holo_red_dark" android:state_checked="true" />
    <item android:color="@android:color/black" android:state_checked="false" />
</selector>

25、子模块混淆文件的指定是通过consumerProguardFiles这个属性来指定的，并不是proguardFiles 属性，而且我们无需配置其他的选项，只
需要配置consumerProguardFiles属性就可以。该属性表示在打包的时候会自动寻找该module下我们指定的混淆文件对代码进行混淆。








































